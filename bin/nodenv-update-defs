#!/usr/bin/env bash
# Usage: nodenv update-defs
# Summary: Runs the node-build scraper to create definitions for latest
# versions from nodejs.org

set -e

resolve_link() {
  $(type -p greadlink readlink | head -1) "$1"
}

abs_dirname() {
  local cwd="$PWD"
  local path="$1"

  while [ -n "$path" ]; do
    cd "${path%/*}" || exit 1
    local name="${path##*/}"
    path="$(resolve_link "$name" || true)"
  done

  pwd
  cd "$cwd" || exit 1
}

INSTALL_PREFIX="$(abs_dirname "${BASH_SOURCE[0]}")/.."

# append nodenv-update-defs to defs path
# ensure user-supplied path is first; that will be the write target
# if not provided, then our own share/node-build will be the write target
NODE_BUILD_DEFINITIONS="${NODE_BUILD_DEFINITIONS:+$NODE_BUILD_DEFINITIONS:}${INSTALL_PREFIX}/share/node-build"

# Add `share/node-build/` directory from each nodenv plugin to the list of
# paths where build definitions are looked up.
shopt -s nullglob
for plugin_path in "$NODENV_ROOT"/plugins/*/share/node-build; do
  NODE_BUILD_DEFINITIONS="${NODE_BUILD_DEFINITIONS}:${plugin_path}"
done
export NODE_BUILD_DEFINITIONS
shopt -u nullglob


force=false

for arg; do
  case "$arg" in
    -f | --force )
      force=true
      ;;
  esac
done


echo "Updating node versions"
node < <(cat <<JS
  var scrape = require('$INSTALL_PREFIX/lib/scraper')
  scrape({
    baseUrl: 'https://nodejs.org/dist/',
    definitionPaths: process.env.NODE_BUILD_DEFINITIONS.split(':'),
    overwrite: $force
  })
JS
)

echo "Updating node versions"
node < <(cat <<JS
  var scrape = require('$INSTALL_PREFIX/lib/scraper')
  scrape({
    baseUrl: 'https://iojs.org/dist/',
    definitionPaths: process.env.NODE_BUILD_DEFINITIONS.split(':'),
    overwrite: $force,
    prefix: 'iojs-'
  })
JS
)
